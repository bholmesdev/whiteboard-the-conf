---
import RSVP from "../../components/RSVP.astro";
import Preview from "../../components/badge/Preview.astro";
import Toggle from "../../components/badge/Toggle.svelte";
import Layout from "../../layouts/Layout.astro";
import { userSchema } from "../../lib/lucia";

const { username } = Astro.params;

if (!username) return Astro.redirect("/");

const session = await Astro.locals.auth.validate();
const isYourProfile = username === session?.user.username;
const user = isYourProfile ? session.user : await lookUpUser();

async function lookUpUser() {
  const rawUser = await Astro.locals.runtime.env.DB.prepare(
    `SELECT username, badge_img_url as badgeImgUrl, picture FROM user WHERE username = ?`
  )
    .bind(username)
    .first();

  if (!rawUser) {
    Astro.response.status = 404;
    return undefined;
  }

  const user = userSchema.parse(rawUser);
  return user;
}
---

<Layout
  title="Whiteboard the conf"
  description={`Join @${username} and other whiteboarding web devs like you`}
>
  {
    !user ? (
      <div class="not-found-container">
        <h1>@{username} not found.</h1>
        <p>
          Sign up to generate your <strong>Whiteboard the Conf</strong> badge!
        </p>
        <RSVP />
      </div>
    ) : (
      <div class="container">
        <header>
          <h1>Whiteboard the conf</h1>
        </header>
        <main>
          {isYourProfile ? (
            <Toggle client:load>
              <Preview slot="preview" {...user} />
            </Toggle>
          ) : (
            <div class="preview-container">
              <p>
                Join @{username} for the greatest gathering of web devs and
                whiteboardists on earth!
              </p>
              <RSVP />
              <Preview {...user} />
            </div>
          )}
        </main>
      </div>
    )
  }
</Layout>

<style>
  .not-found-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--size-3);
    padding-block: var(--size-4);
  }

  .container {
    padding-inline: var(--size-2);
    max-width: 60ch;
    margin: auto;
  }

  main {
    padding-inline: var(--size-2);
  }

  .preview-container {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--size-3);
  }

  header {
    padding-block-end: var(--size-4);
  }

  :root {
    --orange-hs: 7, 91%;
    --purple-hs: 263, 100%;
    --pink-hs: 331, 96%;
    --green-hs: 116, 86%;
    --orange: hsl(var(--orange-hs), 50%);
    --purple: hsl(var(--purple-hs), 50%);
    --pink: hsl(var(--pink-hs), 45%);
    --green: hsl(var(--green-hs), 34%);
  }

  a {
    text-decoration: none;
    background: var(--purple);
  }
</style>
