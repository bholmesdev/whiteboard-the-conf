---
import { scope } from "simple:scope";
---

<script>
  import Alpine from "alpinejs";
  import { setUpCanvas } from "./canvas";

  Alpine.data<{
    formStatus: "initial" | "loading" | "error";
    isEditing: boolean;
    isCopied: boolean;
  }>("toggle", () => ({
    formStatus: "initial",
    isEditing: false,
    isCopied: false,
    initCanvas() {
      const canvas = this.$refs.canvas;
      const container = this.$refs.container;

      if (container && canvas) {
        setUpCanvas(container, canvas as HTMLCanvasElement);
      }
    },
    async onSubmit(event: Event) {
      event.preventDefault();
      this.formStatus = "loading";

      const canvas = this.$refs.canvas as HTMLCanvasElement;
      const badgeImgUrl = canvas.toDataURL();

      const res = await fetch("/user", {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ badgeImgUrl }),
      });

      if (!res.ok) {
        this.formStatus = "error";
        return;
      }

      window.location.reload();
    },
    copyUrlToClipboard() {
      const url = window.location.href;
      navigator.clipboard.writeText(url);
      this.isCopied = true;
      setTimeout(() => {
        this.isCopied = false;
      }, 1000);
    },
  }));
</script>

<div x-data="toggle">
  <form
    x-cloak
    x-show="isEditing"
    x-ref="container"
    @submit="onSubmit"
    x-init="initCanvas"
  >
    <div class="submit-container">
      <button class="submit-btn" :disabled="formStatus === 'loading'"
        >Save
        <svg
          x-show="formStatus === 'loading'"
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 24 24"
          ><path
            fill="currentColor"
            d="M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z"
            opacity=".25"></path><path
            fill="currentColor"
            d="M12,4a8,8,0,0,1,7.89,6.7A1.53,1.53,0,0,0,21.38,12h0a1.5,1.5,0,0,0,1.48-1.75,11,11,0,0,0-21.72,0A1.5,1.5,0,0,0,2.62,12h0a1.53,1.53,0,0,0,1.49-1.3A8,8,0,0,1,12,4Z"
            ><animateTransform
              attributeName="transform"
              dur="0.75s"
              repeatCount="indefinite"
              type="rotate"
              values="0 12 12;360 12 12"></animateTransform></path
          ></svg
        >
      </button>

      <p x-show="formStatus === 'error'" x-transition class="error">
        Problem updating your badge {":("} Try again later!
      </p>
    </div>

    <div class="edit-container">
      <canvas x-ref="canvas" width="1080" height="1440"></canvas>
      <fieldset>
        <legend class="sr-only">Color</legend>

        <input
          type="radio"
          id={scope("purple")}
          name="color"
          value="purple"
          checked
        />
        <label class="sr-only" for={scope("purple")}> Purple</label>

        <input type="radio" id={scope("orange")} name="color" value="orange" />
        <label class="sr-only" for={scope("orange")}> Orange</label>

        <input type="radio" id={scope("pink")} name="color" value="pink" />
        <label class="sr-only" for={scope("pink")}> Pink</label>

        <input type="radio" id={scope("green")} name="color" value="green" />
        <label class="sr-only" for={scope("green")}> Green</label>
      </fieldset>
    </div>
  </form>
  <div x-show="!isEditing" class="preview-btns">
    <button class="edit-btn" @click="isEditing = true"
      >Add a drawing <svg
        xmlns="http://www.w3.org/2000/svg"
        width="32"
        height="32"
        viewBox="0 0 24 24"
        ><path
          fill="currentColor"
          d="m19.3 8.925l-4.25-4.2l1.4-1.4q.575-.575 1.413-.575t1.412.575l1.4 1.4q.575.575.6 1.388t-.55 1.387L19.3 8.925ZM17.85 10.4L7.25 21H3v-4.25l10.6-10.6l4.25 4.25Z"
        ></path></svg
      ></button
    >

    <button @click="copyUrlToClipboard">
      <span x-cloak x-show="isCopied" class="link-copied">
        Link copied <svg
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 24 24"
          ><path
            fill="currentColor"
            d="m10 16.4l-4-4L7.4 11l2.6 2.6L16.6 7L18 8.4l-8 8Z"></path></svg
        >
      </span>
      <span x-show="!isCopied">Share</span>
    </button>
  </div>
  <div x-show="!isEditing">
    <slot name="preview" />
  </div>
</div>

<style>
  .error {
    background-color: var(--red-3);
    color: var(--red-12);
    padding-inline: var(--size-2);
    padding-block: var(--size-1);
  }

  .preview-btns {
    display: flex;
    gap: var(--size-2);
    align-items: center;
    justify-content: space-between;

    margin-block-end: var(--size-3);
  }

  button {
    font-size: var(--font-size-lg);
    border-radius: var(--size-2);
    padding-block: var(--size-2);
    padding-inline: var(--size-5);
    background-color: var(--purple);
    box-shadow: var(--shadow-3);
    transition: scale 0.5s var(--ease-spring-5);
    display: flex;
    align-items: center;
    gap: var(--size-2);
  }

  button:hover {
    scale: 1.1;
  }

  button svg {
    width: 1.2em;
    height: 1.2em;
  }

  .submit-btn {
    background-color: var(--purple);
  }

  .submit-container {
    display: flex;
    align-items: center;
    gap: var(--size-2);
    margin-block-end: var(--size-3);
  }

  .edit-btn {
    background-color: var(--surface-2);
  }

  .edit-container {
    display: flex;
    gap: var(--size-2);
    align-items: flex-start;
  }

  .link-copied {
    display: flex;
    align-items: center;
    gap: var(--size-1);
  }

  fieldset {
    background-color: var(--surface-2);
    border-radius: var(--size-4);
    padding: var(--size-2);
    border: var(--size-1) solid var(--surface-1);
    gap: var(--size-2);
    display: flex;
    flex-direction: column;
  }

  canvas {
    background: white;
    width: 100%;
    aspect-ratio: 3 / 4;
    border-radius: var(--size-4);
    box-shadow: var(--shadow-5);
  }

  input[name="color"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: var(--size-5);
    height: var(--size-5);
    border-radius: 50%;
    background-color: var(--surface-3);
    transition: scale 0.1s ease-in-out;
    position: relative;
  }

  input[id^="orange"] {
    background-color: var(--orange);
  }

  input[id^="purple"] {
    background-color: var(--purple);
  }

  input[id^="pink"] {
    background-color: var(--pink);
  }

  input[id^="green"] {
    background-color: var(--green);
  }

  input[name="color"]:checked {
    scale: 1.1;
  }

  input[name="color"]:checked::before {
    content: "";
    position: absolute;
    inset: -4px;
    border-radius: 100%;
    border: 2px solid var(--surface-4);
  }
</style>
